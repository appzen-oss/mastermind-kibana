/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License; you may not use this file except in compliance with the Elastic License. */
(window["apm_bundle_jsonpfunction"]=window["apm_bundle_jsonpfunction"]||[]).push([[11],{845:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"fetchObservabilityOverviewPageData",(function(){return fetchObservabilityOverviewPageData}));__webpack_require__.d(__webpack_exports__,"hasData",(function(){return hasData}));var lodash__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(21);var lodash__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);var _createCallApmApi__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(48);__webpack_require__.d(__webpack_exports__,"createCallApmApi",(function(){return _createCallApmApi__WEBPACK_IMPORTED_MODULE_1__["b"]}));function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)}))}}const fetchObservabilityOverviewPageData=function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark((function _callee({absoluteTime:absoluteTime,relativeTime:relativeTime,bucketSize:bucketSize}){var data,serviceCount,transactionCoordinates;return regeneratorRuntime.wrap((function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return Object(_createCallApmApi__WEBPACK_IMPORTED_MODULE_1__["a"])({endpoint:"GET /api/apm/observability_overview",params:{query:{start:new Date(absoluteTime.start).toISOString(),end:new Date(absoluteTime.end).toISOString(),bucketSize:bucketSize}}});case 2:data=_context.sent;serviceCount=data.serviceCount,transactionCoordinates=data.transactionCoordinates;return _context.abrupt("return",{appLink:"/app/apm/services?rangeFrom=".concat(relativeTime.start,"&rangeTo=").concat(relativeTime.end),stats:{services:{type:"number",value:serviceCount},transactions:{type:"number",value:Object(lodash__WEBPACK_IMPORTED_MODULE_0__["mean"])(transactionCoordinates.map(({y:y})=>y).filter(y=>y&&isFinite(y)))||0}},series:{transactions:{coordinates:transactionCoordinates}}});case 5:case"end":return _context.stop()}}),_callee)})));return function fetchObservabilityOverviewPageData(_x){return _ref.apply(this,arguments)}}();function hasData(){return _hasData.apply(this,arguments)}function _hasData(){_hasData=_asyncToGenerator(regeneratorRuntime.mark((function _callee2(){return regeneratorRuntime.wrap((function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Object(_createCallApmApi__WEBPACK_IMPORTED_MODULE_1__["a"])({endpoint:"GET /api/apm/observability_overview/has_data"});case 2:return _context2.abrupt("return",_context2.sent);case 3:case"end":return _context2.stop()}}),_callee2)})));return _hasData.apply(this,arguments)}}}]);