/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License; you may not use this file except in compliance with the Elastic License. */
(window["ml_bundle_jsonpfunction"]=window["ml_bundle_jsonpfunction"]||[]).push([[0],{50:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"basePath",(function(){return basePath}));__webpack_require__.d(__webpack_exports__,"ml",(function(){return ml}));__webpack_require__.d(__webpack_exports__,"mlApiServicesProvider",(function(){return mlApiServicesProvider}));var http_service=__webpack_require__(87);const annotations={getAnnotations$(obj){const body=JSON.stringify(obj);return Object(http_service["c"])({path:"".concat(basePath(),"/annotations"),method:"POST",body:body})},getAnnotations(obj){const body=JSON.stringify(obj);return Object(http_service["b"])({path:"".concat(basePath(),"/annotations"),method:"POST",body:body})},indexAnnotation(obj){const body=JSON.stringify(obj);return Object(http_service["b"])({path:"".concat(basePath(),"/annotations/index"),method:"PUT",body:body})},deleteAnnotation(id){return Object(http_service["b"])({path:"".concat(basePath(),"/annotations/delete/").concat(id),method:"DELETE"})}};const dataFrameAnalytics={getDataFrameAnalytics(analyticsId){const analyticsIdString=analyticsId!==undefined?"/".concat(analyticsId):"";return Object(http_service["b"])({path:"".concat(basePath(),"/data_frame/analytics").concat(analyticsIdString),method:"GET"})},getDataFrameAnalyticsStats(analyticsId){if(analyticsId!==undefined){return Object(http_service["b"])({path:"".concat(basePath(),"/data_frame/analytics/").concat(analyticsId,"/_stats"),method:"GET"})}return Object(http_service["b"])({path:"".concat(basePath(),"/data_frame/analytics/_stats"),method:"GET"})},createDataFrameAnalytics(analyticsId,analyticsConfig){const body=JSON.stringify(analyticsConfig);return Object(http_service["b"])({path:"".concat(basePath(),"/data_frame/analytics/").concat(analyticsId),method:"PUT",body:body})},updateDataFrameAnalytics(analyticsId,updateConfig){const body=JSON.stringify(updateConfig);return Object(http_service["b"])({path:"".concat(basePath(),"/data_frame/analytics/").concat(analyticsId,"/_update"),method:"POST",body:body})},getDataFrameAnalyticsMap(id,treatAsRoot,type){const idString=id!==undefined?"/".concat(id):"";return Object(http_service["b"])({path:"".concat(basePath(),"/data_frame/analytics/map").concat(idString),method:"GET",query:{treatAsRoot:treatAsRoot,type:type}})},evaluateDataFrameAnalytics(evaluateConfig){const body=JSON.stringify(evaluateConfig);return Object(http_service["b"])({path:"".concat(basePath(),"/data_frame/_evaluate"),method:"POST",body:body})},explainDataFrameAnalytics(jobConfig){const body=JSON.stringify(jobConfig);return Object(http_service["b"])({path:"".concat(basePath(),"/data_frame/analytics/_explain"),method:"POST",body:body})},deleteDataFrameAnalytics(analyticsId){return Object(http_service["b"])({path:"".concat(basePath(),"/data_frame/analytics/").concat(analyticsId),method:"DELETE"})},deleteDataFrameAnalyticsAndDestIndex(analyticsId,deleteDestIndex,deleteDestIndexPattern){return Object(http_service["b"])({path:"".concat(basePath(),"/data_frame/analytics/").concat(analyticsId),query:{deleteDestIndex:deleteDestIndex,deleteDestIndexPattern:deleteDestIndexPattern},method:"DELETE"})},startDataFrameAnalytics(analyticsId){return Object(http_service["b"])({path:"".concat(basePath(),"/data_frame/analytics/").concat(analyticsId,"/_start"),method:"POST"})},stopDataFrameAnalytics(analyticsId,force=false){return Object(http_service["b"])({path:"".concat(basePath(),"/data_frame/analytics/").concat(analyticsId,"/_stop"),method:"POST",query:{force:force}})},getAnalyticsAuditMessages(analyticsId){return Object(http_service["b"])({path:"".concat(basePath(),"/data_frame/analytics/").concat(analyticsId,"/messages"),method:"GET"})}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach((function(key){_defineProperty(target,key,source[key])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}}return target}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}const filters={filters(obj){const filterId=obj&&obj.filterId?"/".concat(obj.filterId):"";return Object(http_service["b"])({path:"".concat(basePath(),"/filters").concat(filterId),method:"GET"})},filtersStats(){return Object(http_service["b"])({path:"".concat(basePath(),"/filters/_stats"),method:"GET"})},addFilter(filterId,description,items){const body=JSON.stringify({filterId:filterId,description:description,items:items});return Object(http_service["b"])({path:"".concat(basePath(),"/filters"),method:"PUT",body:body})},updateFilter(filterId,description,addItems,removeItems){const body=JSON.stringify(_objectSpread(_objectSpread(_objectSpread({},description!==undefined?{description:description}:{}),addItems!==undefined?{addItems:addItems}:{}),removeItems!==undefined?{removeItems:removeItems}:{}));return Object(http_service["b"])({path:"".concat(basePath(),"/filters/").concat(filterId),method:"PUT",body:body})},deleteFilter(filterId){return Object(http_service["b"])({path:"".concat(basePath(),"/filters/").concat(filterId),method:"DELETE"})}};const resultsApiProvider=httpService=>({getAnomaliesTableData(jobIds,criteriaFields,influencers,aggregationInterval,threshold,earliestMs,latestMs,dateFormatTz,maxRecords,maxExamples,influencersFilterQuery,functionDescription){const body=JSON.stringify({jobIds:jobIds,criteriaFields:criteriaFields,influencers:influencers,aggregationInterval:aggregationInterval,threshold:threshold,earliestMs:earliestMs,latestMs:latestMs,dateFormatTz:dateFormatTz,maxRecords:maxRecords,maxExamples:maxExamples,influencersFilterQuery:influencersFilterQuery,functionDescription:functionDescription});return httpService.http$({path:"".concat(basePath(),"/results/anomalies_table_data"),method:"POST",body:body})},getMaxAnomalyScore(jobIds,earliestMs,latestMs){const body=JSON.stringify({jobIds:jobIds,earliestMs:earliestMs,latestMs:latestMs});return httpService.http({path:"".concat(basePath(),"/results/max_anomaly_score"),method:"POST",body:body})},getCategoryDefinition(jobId,categoryId){const body=JSON.stringify({jobId:jobId,categoryId:categoryId});return httpService.http({path:"".concat(basePath(),"/results/category_definition"),method:"POST",body:body})},getCategoryExamples(jobId,categoryIds,maxExamples){const body=JSON.stringify({jobId:jobId,categoryIds:categoryIds,maxExamples:maxExamples});return httpService.http({path:"".concat(basePath(),"/results/category_examples"),method:"POST",body:body})},fetchPartitionFieldsValues(jobId,searchTerm,criteriaFields,earliestMs,latestMs,fieldsConfig){const body=JSON.stringify({jobId:jobId,searchTerm:searchTerm,criteriaFields:criteriaFields,earliestMs:earliestMs,latestMs:latestMs,fieldsConfig:fieldsConfig});return httpService.http$({path:"".concat(basePath(),"/results/partition_fields_values"),method:"POST",body:body})},anomalySearch(query,jobIds){const body=JSON.stringify({query:query,jobIds:jobIds});return httpService.http({path:"".concat(basePath(),"/results/anomaly_search"),method:"POST",body:body})},anomalySearch$(query,jobIds){const body=JSON.stringify({query:query,jobIds:jobIds});return httpService.http$({path:"".concat(basePath(),"/results/anomaly_search"),method:"POST",body:body})},getCategoryStoppedPartitions(jobIds,fieldToBucket){const body=JSON.stringify({jobIds:jobIds,fieldToBucket:fieldToBucket});return httpService.http({path:"".concat(basePath(),"/results/category_stopped_partitions"),method:"POST",body:body})}});const jobsApiProvider=httpService=>({jobsSummary(jobIds){const body=JSON.stringify({jobIds:jobIds});return httpService.http({path:"".concat(basePath(),"/jobs/jobs_summary"),method:"POST",body:body})},jobsWithTimerange(dateFormatTz){const body=JSON.stringify({dateFormatTz:dateFormatTz});return httpService.http({path:"".concat(basePath(),"/jobs/jobs_with_time_range"),method:"POST",body:body})},jobs(jobIds){const body=JSON.stringify({jobIds:jobIds});return httpService.http({path:"".concat(basePath(),"/jobs/jobs"),method:"POST",body:body})},groups(){return httpService.http({path:"".concat(basePath(),"/jobs/groups"),method:"GET"})},updateGroups(updatedJobs){const body=JSON.stringify({jobs:updatedJobs});return httpService.http({path:"".concat(basePath(),"/jobs/update_groups"),method:"POST",body:body})},forceStartDatafeeds(datafeedIds,start,end){const body=JSON.stringify({datafeedIds:datafeedIds,start:start,end:end});return httpService.http({path:"".concat(basePath(),"/jobs/force_start_datafeeds"),method:"POST",body:body})},stopDatafeeds(datafeedIds){const body=JSON.stringify({datafeedIds:datafeedIds});return httpService.http({path:"".concat(basePath(),"/jobs/stop_datafeeds"),method:"POST",body:body})},deleteJobs(jobIds){const body=JSON.stringify({jobIds:jobIds});return httpService.http({path:"".concat(basePath(),"/jobs/delete_jobs"),method:"POST",body:body})},closeJobs(jobIds){const body=JSON.stringify({jobIds:jobIds});return httpService.http({path:"".concat(basePath(),"/jobs/close_jobs"),method:"POST",body:body})},forceStopAndCloseJob(jobId){const body=JSON.stringify({jobId:jobId});return httpService.http({path:"".concat(basePath(),"/jobs/force_stop_and_close_job"),method:"POST",body:body})},jobAuditMessages(jobId,from){const jobIdString=jobId!==undefined?"/".concat(jobId):"";const query=from!==undefined?{from:from}:{};return httpService.http({path:"".concat(basePath(),"/job_audit_messages/messages").concat(jobIdString),method:"GET",query:query})},deletingJobTasks(){return httpService.http({path:"".concat(basePath(),"/jobs/deleting_jobs_tasks"),method:"GET"})},jobsExist(jobIds){const body=JSON.stringify({jobIds:jobIds});return httpService.http({path:"".concat(basePath(),"/jobs/jobs_exist"),method:"POST",body:body})},newJobCaps(indexPatternTitle,isRollup=false){const query=isRollup===true?{rollup:true}:{};return httpService.http({path:"".concat(basePath(),"/jobs/new_job_caps/").concat(indexPatternTitle),method:"GET",query:query})},newJobLineChart(indexPatternTitle,timeField,start,end,intervalMs,query,aggFieldNamePairs,splitFieldName,splitFieldValue){const body=JSON.stringify({indexPatternTitle:indexPatternTitle,timeField:timeField,start:start,end:end,intervalMs:intervalMs,query:query,aggFieldNamePairs:aggFieldNamePairs,splitFieldName:splitFieldName,splitFieldValue:splitFieldValue});return httpService.http({path:"".concat(basePath(),"/jobs/new_job_line_chart"),method:"POST",body:body})},newJobPopulationsChart(indexPatternTitle,timeField,start,end,intervalMs,query,aggFieldNamePairs,splitFieldName){const body=JSON.stringify({indexPatternTitle:indexPatternTitle,timeField:timeField,start:start,end:end,intervalMs:intervalMs,query:query,aggFieldNamePairs:aggFieldNamePairs,splitFieldName:splitFieldName});return httpService.http({path:"".concat(basePath(),"/jobs/new_job_population_chart"),method:"POST",body:body})},getAllJobAndGroupIds(){return httpService.http({path:"".concat(basePath(),"/jobs/all_jobs_and_group_ids"),method:"GET"})},getLookBackProgress(jobId,start,end){const body=JSON.stringify({jobId:jobId,start:start,end:end});return httpService.http({path:"".concat(basePath(),"/jobs/look_back_progress"),method:"POST",body:body})},categorizationFieldExamples(indexPatternTitle,query,size,field,timeField,start,end,analyzer){const body=JSON.stringify({indexPatternTitle:indexPatternTitle,query:query,size:size,field:field,timeField:timeField,start:start,end:end,analyzer:analyzer});return httpService.http({path:"".concat(basePath(),"/jobs/categorization_field_examples"),method:"POST",body:body})},topCategories(jobId,count){const body=JSON.stringify({jobId:jobId,count:count});return httpService.http({path:"".concat(basePath(),"/jobs/top_categories"),method:"POST",body:body})},revertModelSnapshot(jobId,snapshotId,replay,end,calendarEvents){const body=JSON.stringify({jobId:jobId,snapshotId:snapshotId,replay:replay,end:end,calendarEvents:calendarEvents});return httpService.http({path:"".concat(basePath(),"/jobs/revert_model_snapshot"),method:"POST",body:body})}});const fileDatavisualizer={analyzeFile(file,params={}){const body=JSON.stringify(file);return Object(http_service["b"])({path:"".concat(basePath(),"/file_data_visualizer/analyze_file"),method:"POST",body:body,query:params})},import({id:id,index:index,data:data,settings:settings,mappings:mappings,ingestPipeline:ingestPipeline}){const query=id!==undefined?{id:id}:{};const body=JSON.stringify({index:index,data:data,settings:settings,mappings:mappings,ingestPipeline:ingestPipeline});return Object(http_service["b"])({path:"".concat(basePath(),"/file_data_visualizer/import"),method:"POST",query:query,body:body})}};const savedObjectsApiProvider=httpService=>({jobsSpaces(){return httpService.http({path:"".concat(basePath(),"/saved_objects/jobs_spaces"),method:"GET"})},assignJobToSpace(jobType,jobIds,spaces){const body=JSON.stringify({jobType:jobType,jobIds:jobIds,spaces:spaces});return httpService.http({path:"".concat(basePath(),"/saved_objects/assign_job_to_space"),method:"POST",body:body})},removeJobFromSpace(jobType,jobIds,spaces){const body=JSON.stringify({jobType:jobType,jobIds:jobIds,spaces:spaces});return httpService.http({path:"".concat(basePath(),"/saved_objects/remove_job_from_space"),method:"POST",body:body})},repairSavedObjects(simulate=false){return httpService.http({path:"".concat(basePath(),"/saved_objects/repair"),method:"GET",query:{simulate:simulate}})}});var dependency_cache=__webpack_require__(16);function ml_api_service_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function ml_api_service_objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ml_api_service_ownKeys(Object(source),true).forEach((function(key){ml_api_service_defineProperty(target,key,source[key])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ml_api_service_ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}}return target}function ml_api_service_defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function basePath(){return"/api/ml"}const proxyHttpStart=new Proxy({},{get(obj,prop){try{return Object(dependency_cache["g"])()[prop]}catch(e){console.error(e)}}});const ml=mlApiServicesProvider(new http_service["a"](proxyHttpStart));function mlApiServicesProvider(httpService){return{getJobs(obj){const jobId=obj&&obj.jobId?"/".concat(obj.jobId):"";return httpService.http({path:"".concat(basePath(),"/anomaly_detectors").concat(jobId)})},getJobStats(obj){const jobId=obj&&obj.jobId?"/".concat(obj.jobId):"";return httpService.http({path:"".concat(basePath(),"/anomaly_detectors").concat(jobId,"/_stats")})},addJob({jobId:jobId,job:job}){const body=JSON.stringify(job);return httpService.http({path:"".concat(basePath(),"/anomaly_detectors/").concat(jobId),method:"PUT",body:body})},openJob({jobId:jobId}){return httpService.http({path:"".concat(basePath(),"/anomaly_detectors/").concat(jobId,"/_open"),method:"POST"})},closeJob({jobId:jobId}){return httpService.http({path:"".concat(basePath(),"/anomaly_detectors/").concat(jobId,"/_close"),method:"POST"})},forceCloseJob({jobId:jobId}){return httpService.http({path:"".concat(basePath(),"/anomaly_detectors/").concat(jobId,"/_close?force=true"),method:"POST"})},deleteJob({jobId:jobId}){return httpService.http({path:"".concat(basePath(),"/anomaly_detectors/").concat(jobId),method:"DELETE"})},forceDeleteJob({jobId:jobId}){return httpService.http({path:"".concat(basePath(),"/anomaly_detectors/").concat(jobId,"?force=true"),method:"DELETE"})},updateJob({jobId:jobId,job:job}){const body=JSON.stringify(job);return httpService.http({path:"".concat(basePath(),"/anomaly_detectors/").concat(jobId,"/_update"),method:"POST",body:body})},estimateBucketSpan(obj){const body=JSON.stringify(obj);return httpService.http({path:"".concat(basePath(),"/validate/estimate_bucket_span"),method:"POST",body:body})},validateJob(payload){const body=JSON.stringify(payload);return httpService.http({path:"".concat(basePath(),"/validate/job"),method:"POST",body:body})},validateCardinality$(job){const body=JSON.stringify(job);return httpService.http$({path:"".concat(basePath(),"/validate/cardinality"),method:"POST",body:body})},getDatafeeds(obj){const datafeedId=obj&&obj.datafeedId?"/".concat(obj.datafeedId):"";return httpService.http({path:"".concat(basePath(),"/datafeeds").concat(datafeedId)})},getDatafeedStats(obj){const datafeedId=obj&&obj.datafeedId?"/".concat(obj.datafeedId):"";return httpService.http({path:"".concat(basePath(),"/datafeeds").concat(datafeedId,"/_stats")})},addDatafeed({datafeedId:datafeedId,datafeedConfig:datafeedConfig}){const body=JSON.stringify(datafeedConfig);return httpService.http({path:"".concat(basePath(),"/datafeeds/").concat(datafeedId),method:"PUT",body:body})},updateDatafeed({datafeedId:datafeedId,datafeedConfig:datafeedConfig}){const body=JSON.stringify(datafeedConfig);return httpService.http({path:"".concat(basePath(),"/datafeeds/").concat(datafeedId,"/_update"),method:"POST",body:body})},deleteDatafeed({datafeedId:datafeedId}){return httpService.http({path:"".concat(basePath(),"/datafeeds/").concat(datafeedId),method:"DELETE"})},forceDeleteDatafeed({datafeedId:datafeedId}){return httpService.http({path:"".concat(basePath(),"/datafeeds/").concat(datafeedId,"?force=true"),method:"DELETE"})},startDatafeed({datafeedId:datafeedId,start:start,end:end}){const body=JSON.stringify(ml_api_service_objectSpread(ml_api_service_objectSpread({},start!==undefined?{start:start}:{}),end!==undefined?{end:end}:{}));return httpService.http({path:"".concat(basePath(),"/datafeeds/").concat(datafeedId,"/_start"),method:"POST",body:body})},stopDatafeed({datafeedId:datafeedId}){return httpService.http({path:"".concat(basePath(),"/datafeeds/").concat(datafeedId,"/_stop"),method:"POST"})},forceStopDatafeed({datafeedId:datafeedId}){return httpService.http({path:"".concat(basePath(),"/datafeeds/").concat(datafeedId,"/_stop?force=true"),method:"POST"})},datafeedPreview({datafeedId:datafeedId}){return httpService.http({path:"".concat(basePath(),"/datafeeds/").concat(datafeedId,"/_preview"),method:"GET"})},validateDetector({detector:detector}){const body=JSON.stringify(detector);return httpService.http({path:"".concat(basePath(),"/anomaly_detectors/_validate/detector"),method:"POST",body:body})},forecast({jobId:jobId,duration:duration}){const body=JSON.stringify(ml_api_service_objectSpread({},duration!==undefined?{duration:duration}:{}));return httpService.http({path:"".concat(basePath(),"/anomaly_detectors/").concat(jobId,"/_forecast"),method:"POST",body:body})},overallBuckets({jobId:jobId,topN:topN,bucketSpan:bucketSpan,start:start,end:end}){const body=JSON.stringify({topN:topN,bucketSpan:bucketSpan,start:start,end:end});return httpService.http({path:"".concat(basePath(),"/anomaly_detectors/").concat(jobId,"/results/overall_buckets"),method:"POST",body:body})},hasPrivileges(obj){const body=JSON.stringify(obj);return httpService.http({path:"".concat(basePath(),"/_has_privileges"),method:"POST",body:body})},checkMlCapabilities(){return httpService.http({path:"".concat(basePath(),"/ml_capabilities"),method:"GET"})},checkManageMLCapabilities(){return httpService.http({path:"".concat(basePath(),"/ml_capabilities"),method:"GET"})},getNotificationSettings(){return httpService.http({path:"".concat(basePath(),"/notification_settings"),method:"GET"})},checkIndexExists({index:index}){const body=JSON.stringify({index:index});return httpService.http({path:"".concat(basePath(),"/index_exists"),method:"POST",body:body})},getFieldCaps({index:index,fields:fields}){const body=JSON.stringify(ml_api_service_objectSpread(ml_api_service_objectSpread({},index!==undefined?{index:index}:{}),fields!==undefined?{fields:fields}:{}));return httpService.http({path:"".concat(basePath(),"/indices/field_caps"),method:"POST",body:body})},recognizeIndex({indexPatternTitle:indexPatternTitle}){return httpService.http({path:"".concat(basePath(),"/modules/recognize/").concat(indexPatternTitle),method:"GET"})},listDataRecognizerModules(){return httpService.http({path:"".concat(basePath(),"/modules/get_module"),method:"GET"})},getDataRecognizerModule({moduleId:moduleId}){return httpService.http({path:"".concat(basePath(),"/modules/get_module/").concat(moduleId),method:"GET"})},dataRecognizerModuleJobsExist({moduleId:moduleId}){return httpService.http({path:"".concat(basePath(),"/modules/jobs_exist/").concat(moduleId),method:"GET"})},setupDataRecognizerConfig({moduleId:moduleId,prefix:prefix,groups:groups,indexPatternName:indexPatternName,query:query,useDedicatedIndex:useDedicatedIndex,startDatafeed:startDatafeed,start:start,end:end,jobOverrides:jobOverrides,estimateModelMemory:estimateModelMemory}){const body=JSON.stringify({prefix:prefix,groups:groups,indexPatternName:indexPatternName,query:query,useDedicatedIndex:useDedicatedIndex,startDatafeed:startDatafeed,start:start,end:end,jobOverrides:jobOverrides,estimateModelMemory:estimateModelMemory});return httpService.http({path:"".concat(basePath(),"/modules/setup/").concat(moduleId),method:"POST",body:body})},getVisualizerFieldStats({indexPatternTitle:indexPatternTitle,query:query,timeFieldName:timeFieldName,earliest:earliest,latest:latest,samplerShardSize:samplerShardSize,interval:interval,fields:fields,maxExamples:maxExamples}){const body=JSON.stringify({query:query,timeFieldName:timeFieldName,earliest:earliest,latest:latest,samplerShardSize:samplerShardSize,interval:interval,fields:fields,maxExamples:maxExamples});return httpService.http({path:"".concat(basePath(),"/data_visualizer/get_field_stats/").concat(indexPatternTitle),method:"POST",body:body})},getVisualizerFieldHistograms({indexPatternTitle:indexPatternTitle,query:query,fields:fields,samplerShardSize:samplerShardSize}){const body=JSON.stringify({query:query,fields:fields,samplerShardSize:samplerShardSize});return httpService.http({path:"".concat(basePath(),"/data_visualizer/get_field_histograms/").concat(indexPatternTitle),method:"POST",body:body})},getVisualizerOverallStats({indexPatternTitle:indexPatternTitle,query:query,timeFieldName:timeFieldName,earliest:earliest,latest:latest,samplerShardSize:samplerShardSize,aggregatableFields:aggregatableFields,nonAggregatableFields:nonAggregatableFields}){const body=JSON.stringify({query:query,timeFieldName:timeFieldName,earliest:earliest,latest:latest,samplerShardSize:samplerShardSize,aggregatableFields:aggregatableFields,nonAggregatableFields:nonAggregatableFields});return httpService.http({path:"".concat(basePath(),"/data_visualizer/get_overall_stats/").concat(indexPatternTitle),method:"POST",body:body})},calendars(obj){const _ref=obj||{},calendarId=_ref.calendarId,calendarIds=_ref.calendarIds;let calendarIdsPathComponent="";if(calendarId){calendarIdsPathComponent="/".concat(calendarId)}else if(calendarIds){calendarIdsPathComponent="/".concat(calendarIds.join(","))}return httpService.http({path:"".concat(basePath(),"/calendars").concat(calendarIdsPathComponent),method:"GET"})},addCalendar(obj){const body=JSON.stringify(obj);return httpService.http({path:"".concat(basePath(),"/calendars"),method:"PUT",body:body})},updateCalendar(obj){const calendarId=obj&&obj.calendarId?"/".concat(obj.calendarId):"";const body=JSON.stringify(obj);return httpService.http({path:"".concat(basePath(),"/calendars").concat(calendarId),method:"PUT",body:body})},deleteCalendar({calendarId:calendarId}){return httpService.http({path:"".concat(basePath(),"/calendars/").concat(calendarId),method:"DELETE"})},mlNodeCount(){return httpService.http({path:"".concat(basePath(),"/ml_node_count"),method:"GET"})},mlInfo(){return httpService.http({path:"".concat(basePath(),"/info"),method:"GET"})},calculateModelMemoryLimit$({datafeedConfig:datafeedConfig,analysisConfig:analysisConfig,indexPattern:indexPattern,query:query,timeFieldName:timeFieldName,earliestMs:earliestMs,latestMs:latestMs}){const body=JSON.stringify({datafeedConfig:datafeedConfig,analysisConfig:analysisConfig,indexPattern:indexPattern,query:query,timeFieldName:timeFieldName,earliestMs:earliestMs,latestMs:latestMs});return httpService.http$({path:"".concat(basePath(),"/validate/calculate_model_memory_limit"),method:"POST",body:body})},getCardinalityOfFields({index:index,fieldNames:fieldNames,query:query,timeFieldName:timeFieldName,earliestMs:earliestMs,latestMs:latestMs}){const body=JSON.stringify({index:index,fieldNames:fieldNames,query:query,timeFieldName:timeFieldName,earliestMs:earliestMs,latestMs:latestMs});return httpService.http({path:"".concat(basePath(),"/fields_service/field_cardinality"),method:"POST",body:body})},getTimeFieldRange({index:index,timeFieldName:timeFieldName,query:query}){const body=JSON.stringify({index:index,timeFieldName:timeFieldName,query:query});return httpService.http({path:"".concat(basePath(),"/fields_service/time_field_range"),method:"POST",body:body})},esSearch(obj){const body=JSON.stringify(obj);return httpService.http({path:"".concat(basePath(),"/es_search"),method:"POST",body:body})},esSearch$(obj){const body=JSON.stringify(obj);return httpService.http$({path:"".concat(basePath(),"/es_search"),method:"POST",body:body})},getIndices(){const tempBasePath="/api";return httpService.http({path:"".concat(tempBasePath,"/index_management/indices"),method:"GET"})},getModelSnapshots(jobId,snapshotId){return httpService.http({path:"".concat(basePath(),"/anomaly_detectors/").concat(jobId,"/model_snapshots").concat(snapshotId!==undefined?"/".concat(snapshotId):"")})},updateModelSnapshot(jobId,snapshotId,body){return httpService.http({path:"".concat(basePath(),"/anomaly_detectors/").concat(jobId,"/model_snapshots/").concat(snapshotId,"/_update"),method:"POST",body:JSON.stringify(body)})},deleteModelSnapshot(jobId,snapshotId){return httpService.http({path:"".concat(basePath(),"/anomaly_detectors/").concat(jobId,"/model_snapshots/").concat(snapshotId),method:"DELETE"})},annotations:annotations,dataFrameAnalytics:dataFrameAnalytics,filters:filters,results:resultsApiProvider(httpService),jobs:jobsApiProvider(httpService),fileDatavisualizer:fileDatavisualizer,savedObjects:savedObjectsApiProvider(httpService)}}}}]);