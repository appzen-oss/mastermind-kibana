/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License; you may not use this file except in compliance with the Elastic License. */
(window["securitySolution_bundle_jsonpfunction"]=window["securitySolution_bundle_jsonpfunction"]||[]).push([[5],{1103:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"resolverPluginSetup",(function(){return resolverPluginSetup}));var lib=__webpack_require__(81);var store=__webpack_require__(680);var resolver_without_providers=__webpack_require__(674);function mockEndpointEvent({entityID:entityID,processName:processName="process name",parentEntityID:parentEntityID,timestamp:timestamp=0,eventType:eventType="start",eventCategory:eventCategory="process",pid:pid=0,eventID:eventID="event id"}){return{"@timestamp":timestamp,event:{type:eventType,category:eventCategory,id:eventID},agent:{id:"agent.id",version:"agent.version",type:"agent.type"},ecs:{version:"ecs.version"},user:{name:"user.name",domain:"user.domain"},process:{entity_id:entityID,executable:"executable",args:"args",name:processName,pid:pid,hash:{md5:"hash.md5"},parent:{pid:0,entity_id:parentEntityID}}}}var models_event=__webpack_require__(115);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach((function(key){_defineProperty(target,key,source[key])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}}return target}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol==="undefined"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();normalCompletion=step.done;return step},e:function e(_e2){didErr=true;err=_e2},f:function f(){try{if(!normalCompletion&&it.return!=null)it.return()}finally{if(didErr)throw err}}}}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function mockTreeWithOneNodeAndTwoPagesOfRelatedEvents({originID:originID}){const originEvent=mockEndpointEvent({entityID:originID,processName:"c",parentEntityID:undefined,timestamp:1600863932318});const events=[];const eventsToGenerate=30;for(let i=0;i<eventsToGenerate;i++){const newEvent=mockEndpointEvent({entityID:originID,eventID:"test-".concat(i),eventType:"access",eventCategory:"registry",timestamp:1600863932318});events.push(newEvent)}return{entityID:originID,children:{childNodes:[],nextChild:null},ancestry:{nextAncestor:null,ancestors:[]},lifecycle:[originEvent],relatedEvents:{events:events,nextEvent:null},relatedAlerts:{alerts:[],nextAlert:null},stats:{events:{total:eventsToGenerate,byCategory:{}},totalAlerts:0}}}function mockTreeWith2AncestorsAndNoChildren({originID:originID,firstAncestorID:firstAncestorID,secondAncestorID:secondAncestorID}){const secondAncestor=mockEndpointEvent({entityID:secondAncestorID,processName:"a",parentEntityID:"none",timestamp:1600863932316});const firstAncestor=mockEndpointEvent({entityID:firstAncestorID,processName:"b",parentEntityID:secondAncestorID,timestamp:1600863932317});const originEvent=mockEndpointEvent({entityID:originID,processName:"c",parentEntityID:firstAncestorID,timestamp:1600863932318});return{entityID:originID,children:{childNodes:[],nextChild:null},ancestry:{nextAncestor:null,ancestors:[{entityID:secondAncestorID,lifecycle:[secondAncestor]},{entityID:firstAncestorID,lifecycle:[firstAncestor]}]},lifecycle:[originEvent],relatedEvents:{events:[],nextEvent:null},relatedAlerts:{alerts:[],nextAlert:null},stats:{events:{total:2,byCategory:{}},totalAlerts:0}}}function mockTreeWithAllProcessesTerminated({originID:originID,firstAncestorID:firstAncestorID,secondAncestorID:secondAncestorID}){const secondAncestor=mockEndpointEvent({entityID:secondAncestorID,processName:"a",parentEntityID:"none",timestamp:1600863932316});const firstAncestor=mockEndpointEvent({entityID:firstAncestorID,processName:"b",parentEntityID:secondAncestorID,timestamp:1600863932317});const originEvent=mockEndpointEvent({entityID:originID,processName:"c",parentEntityID:firstAncestorID,timestamp:1600863932318});const secondAncestorTermination=mockEndpointEvent({entityID:secondAncestorID,processName:"a",parentEntityID:"none",timestamp:1600863932316,eventType:"end"});const firstAncestorTermination=mockEndpointEvent({entityID:firstAncestorID,processName:"b",parentEntityID:secondAncestorID,timestamp:1600863932317,eventType:"end"});const originEventTermination=mockEndpointEvent({entityID:originID,processName:"c",parentEntityID:firstAncestorID,timestamp:1600863932318,eventType:"end"});return{entityID:originID,children:{childNodes:[]},ancestry:{ancestors:[{lifecycle:[secondAncestor,secondAncestorTermination]},{lifecycle:[firstAncestor,firstAncestorTermination]}]},lifecycle:[originEvent,originEventTermination]}}function withRelatedEventsOnOrigin(tree,events){const byCategory={};const stats={totalAlerts:0,events:{total:0,byCategory:byCategory}};var _iterator=_createForOfIteratorHelper(events),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){const event=_step.value;stats.events.total++;var _iterator2=_createForOfIteratorHelper(models_event["c"](event)),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){const category=_step2.value;stats.events.byCategory[category]=stats.events.byCategory[category]?stats.events.byCategory[category]+1:1}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}}}catch(err){_iterator.e(err)}finally{_iterator.f()}return _objectSpread(_objectSpread({},tree),{},{stats:stats,relatedEvents:{events:events,nextEvent:null}})}function mockTreeWithNoAncestorsAnd2Children({originID:originID,firstChildID:firstChildID,secondChildID:secondChildID}){const origin=mockEndpointEvent({pid:0,entityID:originID,processName:"c.ext",parentEntityID:"none",timestamp:1600863932316});const firstChild=mockEndpointEvent({pid:1,entityID:firstChildID,processName:"d",parentEntityID:originID,timestamp:1600863932317});const secondChild=mockEndpointEvent({pid:2,entityID:secondChildID,processName:"really_really_really_really_really_really_really_really_really_really_really_really_really_really_long_node_name",parentEntityID:originID,timestamp:1600863932318});return{entityID:originID,children:{childNodes:[{entityID:firstChildID,lifecycle:[firstChild]},{entityID:secondChildID,lifecycle:[secondChild]}],nextChild:null},ancestry:{ancestors:[],nextAncestor:null},lifecycle:[origin],relatedEvents:{events:[],nextEvent:null},relatedAlerts:{alerts:[],nextAlert:null},stats:{events:{total:2,byCategory:{}},totalAlerts:0}}}function mockTreeWith1AncestorAnd2ChildrenAndAllNodesHave2GraphableEvents({ancestorID:ancestorID,originID:originID,firstChildID:firstChildID,secondChildID:secondChildID}){const ancestor=mockEndpointEvent({entityID:ancestorID,processName:ancestorID,timestamp:1600863932317,parentEntityID:undefined});const ancestorClone=mockEndpointEvent({entityID:ancestorID,processName:ancestorID,timestamp:1600863932317,parentEntityID:undefined});const origin=mockEndpointEvent({entityID:originID,processName:originID,parentEntityID:ancestorID,timestamp:1600863932316});const originClone=mockEndpointEvent({entityID:originID,processName:originID,parentEntityID:ancestorID,timestamp:1600863932316});const firstChild=mockEndpointEvent({entityID:firstChildID,processName:firstChildID,parentEntityID:originID,timestamp:1600863932317});const firstChildClone=mockEndpointEvent({entityID:firstChildID,processName:firstChildID,parentEntityID:originID,timestamp:1600863932317});const secondChild=mockEndpointEvent({entityID:secondChildID,processName:secondChildID,parentEntityID:originID,timestamp:1600863932318});const secondChildClone=mockEndpointEvent({entityID:secondChildID,processName:secondChildID,parentEntityID:originID,timestamp:1600863932318});return{entityID:originID,children:{childNodes:[{lifecycle:[firstChild,firstChildClone]},{lifecycle:[secondChild,secondChildClone]}]},ancestry:{ancestors:[{lifecycle:[ancestor,ancestorClone]}]},lifecycle:[origin,originClone]}}function mockTreeWithNoProcessEvents(){return{entityID:"entityID",children:{childNodes:[],nextChild:null},relatedEvents:{events:[],nextEvent:null},relatedAlerts:{alerts:[],nextAlert:null},lifecycle:[],ancestry:{ancestors:[],nextAncestor:null},stats:{totalAlerts:0,events:{total:0,byCategory:{}}}}}const firstRelatedEventID="id of first related event";const secondRelatedEventID="id of second related event";function mockTreeWithNoAncestorsAndTwoChildrenAndRelatedEventsOnOrigin({originID:originID,firstChildID:firstChildID,secondChildID:secondChildID}){const baseTree=mockTreeWithNoAncestorsAnd2Children({originID:originID,firstChildID:firstChildID,secondChildID:secondChildID});const parentEntityID=models_event["l"](baseTree.lifecycle[0]);const relatedEvents=[mockEndpointEvent({entityID:originID,parentEntityID:parentEntityID,eventID:firstRelatedEventID,eventType:"access",eventCategory:"registry"}),mockEndpointEvent({entityID:originID,parentEntityID:parentEntityID,eventID:secondRelatedEventID,eventType:"access",eventCategory:"registry"})];const categories=["authentication","database","driver","file","host","iam","intrusion_detection","malware","network","package","process","web"];for(var _i=0,_categories=categories;_i<_categories.length;_i++){const category=_categories[_i];relatedEvents.push(mockEndpointEvent({entityID:originID,parentEntityID:parentEntityID,eventID:"".concat(relatedEvents.length),eventType:"access",eventCategory:category}))}return withRelatedEventsOnOrigin(baseTree,relatedEvents)}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)}))}}function noAncestorsTwoChildrenWithRelatedEventsOnOrigin(){const metadata={databaseDocumentID:"_id",entityIDs:{origin:"origin",firstChild:"firstChild",secondChild:"secondChild"}};const tree=mockTreeWithNoAncestorsAndTwoChildrenAndRelatedEventsOnOrigin({originID:metadata.entityIDs.origin,firstChildID:metadata.entityIDs.firstChild,secondChildID:metadata.entityIDs.secondChild});return{metadata:metadata,dataAccessLayer:{relatedEvents(entityID){return _asyncToGenerator(regeneratorRuntime.mark((function _callee(){var events;return regeneratorRuntime.wrap((function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:events=entityID===metadata.entityIDs.origin?tree.relatedEvents.events:[];return _context.abrupt("return",{entityID:entityID,events:events,nextEvent:null});case 2:case"end":return _context.stop()}}),_callee)})))()},eventsWithEntityIDAndCategory(entityID,category){return _asyncToGenerator(regeneratorRuntime.mark((function _callee2(){var events;return regeneratorRuntime.wrap((function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:events=entityID===metadata.entityIDs.origin?tree.relatedEvents.events.filter(event=>models_event["c"](event).includes(category)):[];return _context2.abrupt("return",{events:events,nextEvent:null});case 2:case"end":return _context2.stop()}}),_callee2)})))()},event(eventID){return _asyncToGenerator(regeneratorRuntime.mark((function _callee3(){var _tree$relatedEvents$e;return regeneratorRuntime.wrap((function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:return _context3.abrupt("return",(_tree$relatedEvents$e=tree.relatedEvents.events.find(event=>models_event["d"](event)===eventID))!==null&&_tree$relatedEvents$e!==void 0?_tree$relatedEvents$e:null);case 1:case"end":return _context3.stop()}}),_callee3)})))()},resolverTree(){return _asyncToGenerator(regeneratorRuntime.mark((function _callee4(){return regeneratorRuntime.wrap((function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:return _context4.abrupt("return",tree);case 1:case"end":return _context4.stop()}}),_callee4)})))()},entities(){return _asyncToGenerator(regeneratorRuntime.mark((function _callee5(){return regeneratorRuntime.wrap((function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:return _context5.abrupt("return",[{name:"endpoint",schema:{id:"process.entity_id",parent:"process.parent.entity_id",ancestry:"process.Ext.ancestry",name:"process.name"},id:metadata.entityIDs.origin}]);case 1:case"end":return _context5.stop()}}),_callee5)})))()}}}}function resolverPluginSetup(){return{Provider:lib["Provider"],storeFactory:store["a"],ResolverWithoutProviders:resolver_without_providers["a"],mocks:{dataAccessLayer:{noAncestorsTwoChildrenWithRelatedEventsOnOrigin:noAncestorsTwoChildrenWithRelatedEventsOnOrigin}}}}}}]);