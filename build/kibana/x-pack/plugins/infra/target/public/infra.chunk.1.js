/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License; you may not use this file except in compliance with the Elastic License. */
(window["infra_bundle_jsonpfunction"]=window["infra_bundle_jsonpfunction"]||[]).push([[1],{107:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(59);var useEffectOnce_1=tslib_1.__importDefault(__webpack_require__(213));var useMount=function(fn){useEffectOnce_1.default((function(){fn()}))};exports.default=useMount},118:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return MetricsAPITimerangeRT}));__webpack_require__.d(__webpack_exports__,"a",(function(){return MetricsAPISeriesRT}));var io_ts__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);var io_ts__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(io_ts__WEBPACK_IMPORTED_MODULE_0__);var _inventory_models_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(83);var _metrics_explorer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(93);const MetricsAPITimerangeRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({field:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],from:io_ts__WEBPACK_IMPORTED_MODULE_0__["number"],to:io_ts__WEBPACK_IMPORTED_MODULE_0__["number"],interval:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"]});const groupByRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],io_ts__WEBPACK_IMPORTED_MODULE_0__["null"],io_ts__WEBPACK_IMPORTED_MODULE_0__["undefined"]]);const MetricsAPIMetricRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({id:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],aggregations:_inventory_models_types__WEBPACK_IMPORTED_MODULE_1__["d"]});const MetricsAPIRequestRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["intersection"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({timerange:MetricsAPITimerangeRT,indexPattern:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],metrics:io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](MetricsAPIMetricRT)}),io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({groupBy:io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](groupByRT),modules:io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](io_ts__WEBPACK_IMPORTED_MODULE_0__["string"]),afterKey:io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["null"],_metrics_explorer__WEBPACK_IMPORTED_MODULE_2__["b"]]),limit:io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["number"],io_ts__WEBPACK_IMPORTED_MODULE_0__["null"],io_ts__WEBPACK_IMPORTED_MODULE_0__["undefined"]]),filters:io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](io_ts__WEBPACK_IMPORTED_MODULE_0__["object"]),dropLastBucket:io_ts__WEBPACK_IMPORTED_MODULE_0__["boolean"],alignDataToEnd:io_ts__WEBPACK_IMPORTED_MODULE_0__["boolean"]})]);const MetricsAPIPageInfoRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({afterKey:io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["null"],_metrics_explorer__WEBPACK_IMPORTED_MODULE_2__["b"],io_ts__WEBPACK_IMPORTED_MODULE_0__["undefined"]]),interval:io_ts__WEBPACK_IMPORTED_MODULE_0__["number"]});const MetricsAPIColumnTypeRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["keyof"]({date:null,number:null,string:null});const MetricsAPIColumnRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({name:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],type:MetricsAPIColumnTypeRT});const MetricsAPIRowRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["intersection"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({timestamp:io_ts__WEBPACK_IMPORTED_MODULE_0__["number"]}),io_ts__WEBPACK_IMPORTED_MODULE_0__["record"](io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],io_ts__WEBPACK_IMPORTED_MODULE_0__["number"],io_ts__WEBPACK_IMPORTED_MODULE_0__["null"],io_ts__WEBPACK_IMPORTED_MODULE_0__["undefined"],io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](io_ts__WEBPACK_IMPORTED_MODULE_0__["object"])]))]);const MetricsAPISeriesRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["intersection"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({id:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],columns:io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](MetricsAPIColumnRT),rows:io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](MetricsAPIRowRT)}),io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({keys:io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](io_ts__WEBPACK_IMPORTED_MODULE_0__["string"])})]);const MetricsAPIResponseRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({series:io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](MetricsAPISeriesRT),info:MetricsAPIPageInfoRT})},185:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return InfraMetadataRT}));var io_ts__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);var io_ts__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(io_ts__WEBPACK_IMPORTED_MODULE_0__);var _common_inventory_models_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(83);const InfraMetadataRequestRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({nodeId:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],nodeType:_common_inventory_models_types__WEBPACK_IMPORTED_MODULE_1__["c"],sourceId:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],timeRange:io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({from:io_ts__WEBPACK_IMPORTED_MODULE_0__["number"],to:io_ts__WEBPACK_IMPORTED_MODULE_0__["number"]})});const InfraMetadataFeatureRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({name:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],source:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"]});const InfraMetadataOSRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({codename:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],family:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],kernel:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],name:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],platform:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],version:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"]});const InfraMetadataHostRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({name:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],os:InfraMetadataOSRT,architecture:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],containerized:io_ts__WEBPACK_IMPORTED_MODULE_0__["boolean"]});const InfraMetadataInstanceRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({id:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],name:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"]});const InfraMetadataProjectRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({id:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"]});const InfraMetadataMachineRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({interface:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"]});const InfraMetadataCloudRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({instance:InfraMetadataInstanceRT,provider:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],availability_zone:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],project:InfraMetadataProjectRT,machine:InfraMetadataMachineRT});const InfraMetadataInfoRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({cloud:InfraMetadataCloudRT,host:InfraMetadataHostRT});const InfraMetadataRequiredRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({id:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],name:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],features:io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](InfraMetadataFeatureRT)});const InfraMetadataOptionalRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({info:InfraMetadataInfoRT});const InfraMetadataRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["intersection"]([InfraMetadataRequiredRT,InfraMetadataOptionalRT])},204:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return LOG_ENTRIES_PATH}));__webpack_require__.d(__webpack_exports__,"j",(function(){return logEntriesRequestRT}));__webpack_require__.d(__webpack_exports__,"p",(function(){return logEntryContextRT}));__webpack_require__.d(__webpack_exports__,"k",(function(){return logEntriesResponseRT}));__webpack_require__.d(__webpack_exports__,"a",(function(){return LOG_ENTRIES_HIGHLIGHTS_PATH}));__webpack_require__.d(__webpack_exports__,"f",(function(){return logEntriesHighlightsRequestRT}));__webpack_require__.d(__webpack_exports__,"g",(function(){return logEntriesHighlightsResponseRT}));__webpack_require__.d(__webpack_exports__,"b",(function(){return LOG_ENTRIES_ITEM_PATH}));__webpack_require__.d(__webpack_exports__,"h",(function(){return logEntriesItemRequestRT}));__webpack_require__.d(__webpack_exports__,"i",(function(){return logEntriesItemResponseRT}));__webpack_require__.d(__webpack_exports__,"e",(function(){return LOG_ENTRIES_SUMMARY_PATH}));__webpack_require__.d(__webpack_exports__,"n",(function(){return logEntriesSummaryRequestRT}));__webpack_require__.d(__webpack_exports__,"o",(function(){return logEntriesSummaryResponseRT}));__webpack_require__.d(__webpack_exports__,"d",(function(){return LOG_ENTRIES_SUMMARY_HIGHLIGHTS_PATH}));__webpack_require__.d(__webpack_exports__,"l",(function(){return logEntriesSummaryHighlightsRequestRT}));__webpack_require__.d(__webpack_exports__,"m",(function(){return logEntriesSummaryHighlightsResponseRT}));var lib=__webpack_require__(0);const logEntriesCursorRT=lib["type"]({time:lib["number"],tiebreaker:lib["number"]});var common_=__webpack_require__(63);const jsonScalarRT=lib["union"]([lib["null"],lib["boolean"],lib["number"],lib["string"]]);const jsonValueRT=lib["recursion"]("JsonValue",()=>lib["union"]([jsonScalarRT,jsonArrayRT,jsonObjectRT]));const jsonArrayRT=lib["recursion"]("JsonArray",()=>lib["array"](jsonValueRT));const jsonObjectRT=lib["recursion"]("JsonObject",()=>lib["record"](lib["string"],jsonValueRT));var log_sources=__webpack_require__(9);const LOG_ENTRIES_PATH="/api/log_entries/entries";const logEntriesBaseRequestRT=lib["intersection"]([lib["type"]({sourceId:lib["string"],startTimestamp:lib["number"],endTimestamp:lib["number"]}),lib["partial"]({query:lib["union"]([lib["string"],lib["null"]]),size:lib["number"],columns:lib["array"](log_sources["e"])})]);const logEntriesBeforeRequestRT=lib["intersection"]([logEntriesBaseRequestRT,lib["type"]({before:lib["union"]([logEntriesCursorRT,lib["literal"]("last")])})]);const logEntriesAfterRequestRT=lib["intersection"]([logEntriesBaseRequestRT,lib["type"]({after:lib["union"]([logEntriesCursorRT,lib["literal"]("first")])})]);const logEntriesCenteredRequestRT=lib["intersection"]([logEntriesBaseRequestRT,lib["type"]({center:logEntriesCursorRT})]);const logEntriesRequestRT=lib["union"]([logEntriesBaseRequestRT,logEntriesBeforeRequestRT,logEntriesAfterRequestRT,logEntriesCenteredRequestRT]);const logMessageConstantPartRT=lib["type"]({constant:lib["string"]});const logMessageFieldPartRT=lib["type"]({field:lib["string"],value:jsonArrayRT,highlights:lib["array"](lib["string"])});const logMessagePartRT=lib["union"]([logMessageConstantPartRT,logMessageFieldPartRT]);const logTimestampColumnRT=lib["type"]({columnId:lib["string"],timestamp:lib["number"]});const logFieldColumnRT=lib["type"]({columnId:lib["string"],field:lib["string"],value:jsonArrayRT,highlights:lib["array"](lib["string"])});const logMessageColumnRT=lib["type"]({columnId:lib["string"],message:lib["array"](logMessagePartRT)});const logColumnRT=lib["union"]([logTimestampColumnRT,logFieldColumnRT,logMessageColumnRT]);const logEntryContextRT=lib["union"]([lib["type"]({}),lib["type"]({"container.id":lib["string"]}),lib["type"]({"host.name":lib["string"],"log.file.path":lib["string"]})]);const logEntryRT=lib["type"]({id:lib["string"],cursor:logEntriesCursorRT,columns:lib["array"](logColumnRT),context:logEntryContextRT});const logEntriesResponseRT=lib["type"]({data:lib["intersection"]([lib["type"]({entries:lib["array"](logEntryRT),topCursor:lib["union"]([logEntriesCursorRT,lib["null"]]),bottomCursor:lib["union"]([logEntriesCursorRT,lib["null"]])}),lib["partial"]({hasMoreBefore:lib["boolean"],hasMoreAfter:lib["boolean"]})])});const LOG_ENTRIES_HIGHLIGHTS_PATH="/api/log_entries/highlights";const highlightsRT=lib["type"]({highlightTerms:lib["array"](lib["string"])});const logEntriesHighlightsBaseRequestRT=lib["intersection"]([logEntriesBaseRequestRT,highlightsRT]);const logEntriesHighlightsBeforeRequestRT=lib["intersection"]([logEntriesBeforeRequestRT,highlightsRT]);const logEntriesHighlightsAfterRequestRT=lib["intersection"]([logEntriesAfterRequestRT,highlightsRT]);const logEntriesHighlightsCenteredRequestRT=lib["intersection"]([logEntriesCenteredRequestRT,highlightsRT]);const logEntriesHighlightsRequestRT=lib["union"]([logEntriesHighlightsBaseRequestRT,logEntriesHighlightsBeforeRequestRT,logEntriesHighlightsAfterRequestRT,logEntriesHighlightsCenteredRequestRT]);const logEntriesHighlightsResponseRT=lib["type"]({data:lib["array"](lib["union"]([lib["type"]({topCursor:lib["null"],bottomCursor:lib["null"],entries:lib["array"](logEntryRT)}),lib["type"]({topCursor:logEntriesCursorRT,bottomCursor:logEntriesCursorRT,entries:lib["array"](logEntryRT)})]))});const LOG_ENTRIES_ITEM_PATH="/api/log_entries/item";const logEntriesItemRequestRT=lib["type"]({sourceId:lib["string"],id:lib["string"]});const logEntriesItemFieldRT=lib["type"]({field:lib["string"],value:lib["array"](lib["string"])});const logEntriesItemRT=lib["type"]({id:lib["string"],index:lib["string"],fields:lib["array"](logEntriesItemFieldRT),key:logEntriesCursorRT});const logEntriesItemResponseRT=lib["type"]({data:logEntriesItemRT});const LOG_ENTRIES_SUMMARY_PATH="/api/log_entries/summary";const logEntriesSummaryRequestRT=lib["type"]({sourceId:lib["string"],startTimestamp:lib["number"],endTimestamp:lib["number"],bucketSize:lib["number"],query:lib["union"]([lib["string"],lib["undefined"],lib["null"]])});const logEntriesSummaryBucketRT=lib["type"]({start:lib["number"],end:lib["number"],entriesCount:lib["number"]});const logEntriesSummaryResponseRT=lib["type"]({data:lib["type"]({start:lib["number"],end:lib["number"],buckets:lib["array"](logEntriesSummaryBucketRT)})});const LOG_ENTRIES_SUMMARY_HIGHLIGHTS_PATH="/api/log_entries/summary_highlights";const logEntriesSummaryHighlightsRequestRT=lib["intersection"]([logEntriesSummaryRequestRT,lib["type"]({highlightTerms:lib["array"](lib["string"])})]);const logEntriesSummaryHighlightsBucketRT=lib["intersection"]([logEntriesSummaryBucketRT,lib["type"]({representativeKey:logEntriesCursorRT})]);const logEntriesSummaryHighlightsResponseRT=lib["type"]({data:lib["array"](lib["type"]({start:lib["number"],end:lib["number"],buckets:lib["array"](logEntriesSummaryHighlightsBucketRT)}))})},209:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return LOG_ALERTS_CHART_PREVIEW_DATA_PATH}));__webpack_require__.d(__webpack_exports__,"d",(function(){return getLogAlertsChartPreviewDataSuccessResponsePayloadRT}));__webpack_require__.d(__webpack_exports__,"b",(function(){return getLogAlertsChartPreviewDataAlertParamsSubsetRT}));__webpack_require__.d(__webpack_exports__,"c",(function(){return getLogAlertsChartPreviewDataRequestPayloadRT}));var lib=__webpack_require__(0);var types=__webpack_require__(5);const LOG_ALERTS_CHART_PREVIEW_DATA_PATH="/api/infra/log_alerts/chart_preview_data";const pointRT=lib["type"]({timestamp:lib["number"],value:lib["number"]});const serieRT=lib["type"]({id:lib["string"],points:lib["array"](pointRT)});const seriesRT=lib["array"](serieRT);const getLogAlertsChartPreviewDataSuccessResponsePayloadRT=lib["type"]({data:lib["type"]({series:seriesRT})});const getLogAlertsChartPreviewDataAlertParamsSubsetRT=lib["intersection"]([lib["type"]({criteria:types["e"],timeUnit:types["d"],timeSize:types["j"]}),lib["partial"]({groupBy:types["h"]})]);const getLogAlertsChartPreviewDataRequestPayloadRT=lib["type"]({data:lib["type"]({sourceId:lib["string"],alertParams:getLogAlertsChartPreviewDataAlertParamsSubsetRT,buckets:lib["number"]})})},213:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var react_1=__webpack_require__(2);var useEffectOnce=function(effect){react_1.useEffect(effect,[])};exports.default=useEffectOnce},81:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return useLogSource}));__webpack_require__.d(__webpack_exports__,"a",(function(){return LogSourceProvider}));__webpack_require__.d(__webpack_exports__,"c",(function(){return useLogSourceContext}));var constate_cjs=__webpack_require__(76);var constate_cjs_default=__webpack_require__.n(constate_cjs);var external_kbnSharedDeps_React_=__webpack_require__(2);var useMountedState=__webpack_require__(116);var useMountedState_default=__webpack_require__.n(useMountedState);var log_sources=__webpack_require__(9);var use_tracked_promise=__webpack_require__(79);var fetch_log_source_configuration=__webpack_require__(35);var fetch_log_source_status=__webpack_require__(38);var runtime_types=__webpack_require__(13);function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)}))}}const callPatchLogSourceConfigurationAPI=function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark((function _callee(sourceId,patchedProperties,fetch){var response;return regeneratorRuntime.wrap((function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(Object(log_sources["a"])(sourceId),{method:"PATCH",body:JSON.stringify(log_sources["f"].encode({data:patchedProperties}))});case 2:response=_context.sent;return _context.abrupt("return",Object(runtime_types["b"])(log_sources["g"])(response));case 4:case"end":return _context.stop()}}),_callee)})));return function callPatchLogSourceConfigurationAPI(_x,_x2,_x3){return _ref.apply(this,arguments)}}();function log_source_asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function log_source_asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){log_source_asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){log_source_asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)}))}}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _iterableToArrayLimit(arr,i){if(typeof Symbol==="undefined"||!(Symbol.iterator in Object(arr)))return;var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}const useLogSource=({sourceId:sourceId,fetch:fetch})=>{const getIsMounted=useMountedState_default()();const _useState=Object(external_kbnSharedDeps_React_["useState"])(undefined),_useState2=_slicedToArray(_useState,2),sourceConfiguration=_useState2[0],setSourceConfiguration=_useState2[1];const _useState3=Object(external_kbnSharedDeps_React_["useState"])(undefined),_useState4=_slicedToArray(_useState3,2),sourceStatus=_useState4[0],setSourceStatus=_useState4[1];const _useTrackedPromise=Object(use_tracked_promise["b"])({cancelPreviousOn:"resolution",createPromise:function(){var _createPromise=log_source_asyncToGenerator(regeneratorRuntime.mark((function _callee(){return regeneratorRuntime.wrap((function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return Object(fetch_log_source_configuration["a"])(sourceId,fetch);case 2:return _context.abrupt("return",_context.sent);case 3:case"end":return _context.stop()}}),_callee)})));function createPromise(){return _createPromise.apply(this,arguments)}return createPromise}(),onResolve:({data:data})=>{if(!getIsMounted()){return}setSourceConfiguration(data)}},[sourceId,fetch]),_useTrackedPromise2=_slicedToArray(_useTrackedPromise,2),loadSourceConfigurationRequest=_useTrackedPromise2[0],loadSourceConfiguration=_useTrackedPromise2[1];const _useTrackedPromise3=Object(use_tracked_promise["b"])({cancelPreviousOn:"resolution",createPromise:function(){var _createPromise2=log_source_asyncToGenerator(regeneratorRuntime.mark((function _callee2(patchedProperties){return regeneratorRuntime.wrap((function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return callPatchLogSourceConfigurationAPI(sourceId,patchedProperties,fetch);case 2:return _context2.abrupt("return",_context2.sent);case 3:case"end":return _context2.stop()}}),_callee2)})));function createPromise(_x){return _createPromise2.apply(this,arguments)}return createPromise}(),onResolve:({data:data})=>{if(!getIsMounted()){return}setSourceConfiguration(data);loadSourceStatus()}},[sourceId,fetch]),_useTrackedPromise4=_slicedToArray(_useTrackedPromise3,2),updateSourceConfigurationRequest=_useTrackedPromise4[0],updateSourceConfiguration=_useTrackedPromise4[1];const _useTrackedPromise5=Object(use_tracked_promise["b"])({cancelPreviousOn:"resolution",createPromise:function(){var _createPromise3=log_source_asyncToGenerator(regeneratorRuntime.mark((function _callee3(){return regeneratorRuntime.wrap((function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return Object(fetch_log_source_status["a"])(sourceId,fetch);case 2:return _context3.abrupt("return",_context3.sent);case 3:case"end":return _context3.stop()}}),_callee3)})));function createPromise(){return _createPromise3.apply(this,arguments)}return createPromise}(),onResolve:({data:data})=>{if(!getIsMounted()){return}setSourceStatus(data)}},[sourceId,fetch]),_useTrackedPromise6=_slicedToArray(_useTrackedPromise5,2),loadSourceStatusRequest=_useTrackedPromise6[0],loadSourceStatus=_useTrackedPromise6[1];const derivedIndexPattern=Object(external_kbnSharedDeps_React_["useMemo"])(()=>{var _sourceStatus$logInde,_sourceConfiguration$;return{fields:(_sourceStatus$logInde=sourceStatus===null||sourceStatus===void 0?void 0:sourceStatus.logIndexFields)!==null&&_sourceStatus$logInde!==void 0?_sourceStatus$logInde:[],title:(_sourceConfiguration$=sourceConfiguration===null||sourceConfiguration===void 0?void 0:sourceConfiguration.configuration.name)!==null&&_sourceConfiguration$!==void 0?_sourceConfiguration$:"unknown"}},[sourceConfiguration,sourceStatus]);const isLoadingSourceConfiguration=Object(external_kbnSharedDeps_React_["useMemo"])(()=>loadSourceConfigurationRequest.state==="pending",[loadSourceConfigurationRequest.state]);const isUpdatingSourceConfiguration=Object(external_kbnSharedDeps_React_["useMemo"])(()=>updateSourceConfigurationRequest.state==="pending",[updateSourceConfigurationRequest.state]);const isLoadingSourceStatus=Object(external_kbnSharedDeps_React_["useMemo"])(()=>loadSourceStatusRequest.state==="pending",[loadSourceStatusRequest.state]);const isLoading=Object(external_kbnSharedDeps_React_["useMemo"])(()=>isLoadingSourceConfiguration||isLoadingSourceStatus||isUpdatingSourceConfiguration,[isLoadingSourceConfiguration,isLoadingSourceStatus,isUpdatingSourceConfiguration]);const isUninitialized=Object(external_kbnSharedDeps_React_["useMemo"])(()=>loadSourceConfigurationRequest.state==="uninitialized"||loadSourceStatusRequest.state==="uninitialized",[loadSourceConfigurationRequest.state,loadSourceStatusRequest.state]);const hasFailedLoadingSource=Object(external_kbnSharedDeps_React_["useMemo"])(()=>loadSourceConfigurationRequest.state==="rejected",[loadSourceConfigurationRequest.state]);const hasFailedLoadingSourceStatus=Object(external_kbnSharedDeps_React_["useMemo"])(()=>loadSourceStatusRequest.state==="rejected",[loadSourceStatusRequest.state]);const loadSourceFailureMessage=Object(external_kbnSharedDeps_React_["useMemo"])(()=>loadSourceConfigurationRequest.state==="rejected"?"".concat(loadSourceConfigurationRequest.value):undefined,[loadSourceConfigurationRequest]);const loadSource=Object(external_kbnSharedDeps_React_["useCallback"])(()=>Promise.all([loadSourceConfiguration(),loadSourceStatus()]),[loadSourceConfiguration,loadSourceStatus]);const initialize=Object(external_kbnSharedDeps_React_["useCallback"])(log_source_asyncToGenerator(regeneratorRuntime.mark((function _callee4(){return regeneratorRuntime.wrap((function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:if(isUninitialized){_context4.next=2;break}return _context4.abrupt("return");case 2:_context4.next=4;return loadSource();case 4:return _context4.abrupt("return",_context4.sent);case 5:case"end":return _context4.stop()}}),_callee4)}))),[isUninitialized,loadSource]);return{derivedIndexPattern:derivedIndexPattern,hasFailedLoadingSource:hasFailedLoadingSource,hasFailedLoadingSourceStatus:hasFailedLoadingSourceStatus,initialize:initialize,isLoading:isLoading,isLoadingSourceConfiguration:isLoadingSourceConfiguration,isLoadingSourceStatus:isLoadingSourceStatus,isUninitialized:isUninitialized,loadSource:loadSource,loadSourceFailureMessage:loadSourceFailureMessage,loadSourceConfiguration:loadSourceConfiguration,loadSourceStatus:loadSourceStatus,sourceConfiguration:sourceConfiguration,sourceId:sourceId,sourceStatus:sourceStatus,updateSourceConfiguration:updateSourceConfiguration}};const _createContainer=constate_cjs_default()(useLogSource),_createContainer2=_slicedToArray(_createContainer,2),LogSourceProvider=_createContainer2[0],useLogSourceContext=_createContainer2[1]},86:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return log_analysis["a"]}));__webpack_require__.d(__webpack_exports__,"k",(function(){return log_analysis["k"]}));__webpack_require__.d(__webpack_exports__,"l",(function(){return log_analysis["l"]}));__webpack_require__.d(__webpack_exports__,"c",(function(){return log_analysis["i"]}));__webpack_require__.d(__webpack_exports__,"y",(function(){return log_analysis["A"]}));__webpack_require__.d(__webpack_exports__,"z",(function(){return log_analysis["B"]}));__webpack_require__.d(__webpack_exports__,"d",(function(){return log_analysis["j"]}));__webpack_require__.d(__webpack_exports__,"B",(function(){return log_analysis["D"]}));__webpack_require__.d(__webpack_exports__,"A",(function(){return log_analysis["C"]}));__webpack_require__.d(__webpack_exports__,"C",(function(){return log_analysis["E"]}));__webpack_require__.d(__webpack_exports__,"g",(function(){return log_entries["c"]}));__webpack_require__.d(__webpack_exports__,"s",(function(){return log_entries["j"]}));__webpack_require__.d(__webpack_exports__,"t",(function(){return log_entries["k"]}));__webpack_require__.d(__webpack_exports__,"e",(function(){return log_entries["a"]}));__webpack_require__.d(__webpack_exports__,"o",(function(){return log_entries["f"]}));__webpack_require__.d(__webpack_exports__,"p",(function(){return log_entries["g"]}));__webpack_require__.d(__webpack_exports__,"f",(function(){return log_entries["b"]}));__webpack_require__.d(__webpack_exports__,"q",(function(){return log_entries["h"]}));__webpack_require__.d(__webpack_exports__,"r",(function(){return log_entries["i"]}));__webpack_require__.d(__webpack_exports__,"i",(function(){return log_entries["e"]}));__webpack_require__.d(__webpack_exports__,"w",(function(){return log_entries["n"]}));__webpack_require__.d(__webpack_exports__,"x",(function(){return log_entries["o"]}));__webpack_require__.d(__webpack_exports__,"h",(function(){return log_entries["d"]}));__webpack_require__.d(__webpack_exports__,"u",(function(){return log_entries["l"]}));__webpack_require__.d(__webpack_exports__,"v",(function(){return log_entries["m"]}));__webpack_require__.d(__webpack_exports__,"a",(function(){return log_alerts["a"]}));__webpack_require__.d(__webpack_exports__,"n",(function(){return log_alerts["d"]}));__webpack_require__.d(__webpack_exports__,"m",(function(){return log_alerts["c"]}));__webpack_require__.d(__webpack_exports__,"j",(function(){return ProcessListAPIResponseRT}));var log_analysis=__webpack_require__(97);var metadata_api=__webpack_require__(185);var log_entries=__webpack_require__(204);var metrics_explorer=__webpack_require__(93);var metrics_api=__webpack_require__(118);var log_alerts=__webpack_require__(209);var snapshot_api=__webpack_require__(87);var lib=__webpack_require__(0);const ProcessListAPIRequestRT=lib["type"]({hostTerm:lib["record"](lib["string"],lib["string"]),timerange:metrics_api["b"],indexPattern:lib["string"]});const ProcessListAPIResponseRT=lib["array"](metrics_api["a"])},87:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"g",(function(){return SnapshotNodeResponseRT}));__webpack_require__.d(__webpack_exports__,"a",(function(){return InfraTimerangeInputRT}));__webpack_require__.d(__webpack_exports__,"e",(function(){return SnapshotGroupByRT}));__webpack_require__.d(__webpack_exports__,"b",(function(){return SNAPSHOT_CUSTOM_AGGREGATIONS}));__webpack_require__.d(__webpack_exports__,"c",(function(){return SnapshotCustomAggregationRT}));__webpack_require__.d(__webpack_exports__,"d",(function(){return SnapshotCustomMetricInputRT}));__webpack_require__.d(__webpack_exports__,"f",(function(){return SnapshotMetricInputRT}));var io_ts__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);var io_ts__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(io_ts__WEBPACK_IMPORTED_MODULE_0__);var _inventory_models_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(83);var _metrics_api__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(118);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach((function(key){_defineProperty(target,key,source[key])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}}return target}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}const SnapshotNodePathRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["intersection"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({value:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],label:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"]}),io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({ip:io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],io_ts__WEBPACK_IMPORTED_MODULE_0__["null"]])})]);const SnapshotNodeMetricOptionalRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({value:io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["number"],io_ts__WEBPACK_IMPORTED_MODULE_0__["null"]]),avg:io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["number"],io_ts__WEBPACK_IMPORTED_MODULE_0__["null"]]),max:io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["number"],io_ts__WEBPACK_IMPORTED_MODULE_0__["null"]]),timeseries:_metrics_api__WEBPACK_IMPORTED_MODULE_2__["a"]});const SnapshotNodeMetricRequiredRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({name:io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([_inventory_models_types__WEBPACK_IMPORTED_MODULE_1__["e"],io_ts__WEBPACK_IMPORTED_MODULE_0__["string"]])});const SnapshotNodeMetricRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["intersection"]([SnapshotNodeMetricRequiredRT,SnapshotNodeMetricOptionalRT]);const SnapshotNodeRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({metrics:io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](SnapshotNodeMetricRT),path:io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](SnapshotNodePathRT),name:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"]});const SnapshotNodeResponseRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({nodes:io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](SnapshotNodeRT),interval:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"]});const InfraTimerangeInputRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["intersection"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({interval:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],to:io_ts__WEBPACK_IMPORTED_MODULE_0__["number"],from:io_ts__WEBPACK_IMPORTED_MODULE_0__["number"]}),io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({lookbackSize:io_ts__WEBPACK_IMPORTED_MODULE_0__["number"],ignoreLookback:io_ts__WEBPACK_IMPORTED_MODULE_0__["boolean"],forceInterval:io_ts__WEBPACK_IMPORTED_MODULE_0__["boolean"]})]);const SnapshotGroupByRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({label:io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],io_ts__WEBPACK_IMPORTED_MODULE_0__["null"]]),field:io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],io_ts__WEBPACK_IMPORTED_MODULE_0__["null"]])}));const SnapshotNamedMetricInputRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({type:_inventory_models_types__WEBPACK_IMPORTED_MODULE_1__["e"]});const SNAPSHOT_CUSTOM_AGGREGATIONS=["avg","max","min","rate"];const snapshotCustomAggregationKeys=SNAPSHOT_CUSTOM_AGGREGATIONS.reduce((acc,agg)=>_objectSpread(_objectSpread({},acc),{},{[agg]:null}),{});const SnapshotCustomAggregationRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["keyof"](snapshotCustomAggregationKeys);const SnapshotCustomMetricInputRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["intersection"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({type:io_ts__WEBPACK_IMPORTED_MODULE_0__["literal"]("custom"),field:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],aggregation:SnapshotCustomAggregationRT,id:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"]}),io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({label:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"]})]);const SnapshotMetricInputRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([SnapshotNamedMetricInputRT,SnapshotCustomMetricInputRT]);const SnapshotRequestRT=io_ts__WEBPACK_IMPORTED_MODULE_0__["intersection"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["type"]({timerange:InfraTimerangeInputRT,metrics:io_ts__WEBPACK_IMPORTED_MODULE_0__["array"](SnapshotMetricInputRT),groupBy:io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([SnapshotGroupByRT,io_ts__WEBPACK_IMPORTED_MODULE_0__["null"]]),nodeType:_inventory_models_types__WEBPACK_IMPORTED_MODULE_1__["c"],sourceId:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"]}),io_ts__WEBPACK_IMPORTED_MODULE_0__["partial"]({accountId:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],region:io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],filterQuery:io_ts__WEBPACK_IMPORTED_MODULE_0__["union"]([io_ts__WEBPACK_IMPORTED_MODULE_0__["string"],io_ts__WEBPACK_IMPORTED_MODULE_0__["null"]]),includeTimeseries:io_ts__WEBPACK_IMPORTED_MODULE_0__["boolean"],overrideCompositeSize:io_ts__WEBPACK_IMPORTED_MODULE_0__["number"]})])},97:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"d",(function(){return LOG_ANALYSIS_GET_LOG_ENTRY_CATEGORIES_PATH}));__webpack_require__.d(__webpack_exports__,"q",(function(){return getLogEntryCategoriesRequestPayloadRT}));__webpack_require__.d(__webpack_exports__,"r",(function(){return getLogEntryCategoriesSuccessReponsePayloadRT}));__webpack_require__.d(__webpack_exports__,"e",(function(){return LOG_ANALYSIS_GET_LOG_ENTRY_CATEGORY_DATASETS_PATH}));__webpack_require__.d(__webpack_exports__,"s",(function(){return getLogEntryCategoryDatasetsRequestPayloadRT}));__webpack_require__.d(__webpack_exports__,"t",(function(){return getLogEntryCategoryDatasetsSuccessReponsePayloadRT}));__webpack_require__.d(__webpack_exports__,"a",(function(){return LOG_ANALYSIS_GET_LATEST_LOG_ENTRY_CATEGORY_DATASETS_STATS_PATH}));__webpack_require__.d(__webpack_exports__,"k",(function(){return getLatestLogEntryCategoryDatasetsStatsRequestPayloadRT}));__webpack_require__.d(__webpack_exports__,"l",(function(){return getLatestLogEntryCategoryDatasetsStatsSuccessResponsePayloadRT}));__webpack_require__.d(__webpack_exports__,"f",(function(){return LOG_ANALYSIS_GET_LOG_ENTRY_CATEGORY_EXAMPLES_PATH}));__webpack_require__.d(__webpack_exports__,"u",(function(){return getLogEntryCategoryExamplesRequestPayloadRT}));__webpack_require__.d(__webpack_exports__,"v",(function(){return getLogEntryCategoryExamplesSuccessReponsePayloadRT}));__webpack_require__.d(__webpack_exports__,"h",(function(){return LOG_ANALYSIS_GET_LOG_ENTRY_RATE_PATH}));__webpack_require__.d(__webpack_exports__,"y",(function(){return getLogEntryRateRequestPayloadRT}));__webpack_require__.d(__webpack_exports__,"z",(function(){return getLogEntryRateSuccessReponsePayloadRT}));__webpack_require__.d(__webpack_exports__,"g",(function(){return LOG_ANALYSIS_GET_LOG_ENTRY_RATE_EXAMPLES_PATH}));__webpack_require__.d(__webpack_exports__,"w",(function(){return getLogEntryExamplesRequestPayloadRT}));__webpack_require__.d(__webpack_exports__,"x",(function(){return getLogEntryExamplesSuccessReponsePayloadRT}));__webpack_require__.d(__webpack_exports__,"c",(function(){return LOG_ANALYSIS_GET_LOG_ENTRY_ANOMALIES_PATH}));__webpack_require__.d(__webpack_exports__,"p",(function(){return getLogEntryAnomaliesSuccessReponsePayloadRT}));__webpack_require__.d(__webpack_exports__,"o",(function(){return getLogEntryAnomaliesRequestPayloadRT}));__webpack_require__.d(__webpack_exports__,"b",(function(){return LOG_ANALYSIS_GET_LOG_ENTRY_ANOMALIES_DATASETS_PATH}));__webpack_require__.d(__webpack_exports__,"m",(function(){return getLogEntryAnomaliesDatasetsRequestPayloadRT}));__webpack_require__.d(__webpack_exports__,"n",(function(){return getLogEntryAnomaliesDatasetsSuccessReponsePayloadRT}));__webpack_require__.d(__webpack_exports__,"i",(function(){return LOG_ANALYSIS_VALIDATE_DATASETS_PATH}));__webpack_require__.d(__webpack_exports__,"A",(function(){return validateLogEntryDatasetsRequestPayloadRT}));__webpack_require__.d(__webpack_exports__,"B",(function(){return validateLogEntryDatasetsResponsePayloadRT}));__webpack_require__.d(__webpack_exports__,"j",(function(){return LOG_ANALYSIS_VALIDATE_INDICES_PATH}));__webpack_require__.d(__webpack_exports__,"D",(function(){return validationIndicesRequestPayloadRT}));__webpack_require__.d(__webpack_exports__,"C",(function(){return validationIndicesErrorRT}));__webpack_require__.d(__webpack_exports__,"E",(function(){return validationIndicesResponsePayloadRT}));var lib=__webpack_require__(0);var shared=__webpack_require__(3);const LOG_ANALYSIS_GET_LOG_ENTRY_CATEGORIES_PATH="/api/infra/log_analysis/results/log_entry_categories";const logEntryCategoriesHistogramParametersRT=lib["type"]({id:lib["string"],timeRange:shared["e"],bucketCount:lib["number"]});const getLogEntryCategoriesRequestPayloadRT=lib["type"]({data:lib["intersection"]([lib["type"]({categoryCount:lib["number"],sourceId:lib["string"],timeRange:shared["e"],histograms:lib["array"](logEntryCategoriesHistogramParametersRT)}),lib["partial"]({datasets:lib["array"](lib["string"])})])});const logEntryCategoryHistogramBucketRT=lib["type"]({startTime:lib["number"],bucketDuration:lib["number"],logEntryCount:lib["number"]});const logEntryCategoryHistogramRT=lib["type"]({histogramId:lib["string"],buckets:lib["array"](logEntryCategoryHistogramBucketRT)});const logEntryCategoryDatasetRT=lib["type"]({name:lib["string"],maximumAnomalyScore:lib["number"]});const logEntryCategoryRT=lib["type"]({categoryId:lib["number"],datasets:lib["array"](logEntryCategoryDatasetRT),histograms:lib["array"](logEntryCategoryHistogramRT),logEntryCount:lib["number"],maximumAnomalyScore:lib["number"],regularExpression:lib["string"]});const getLogEntryCategoriesSuccessReponsePayloadRT=lib["intersection"]([lib["type"]({data:lib["type"]({categories:lib["array"](logEntryCategoryRT)})}),lib["partial"]({timing:shared["d"]})]);const getLogEntryCategoriesResponsePayloadRT=lib["union"]([getLogEntryCategoriesSuccessReponsePayloadRT,shared["a"],shared["c"]]);const LOG_ANALYSIS_GET_LOG_ENTRY_CATEGORY_DATASETS_PATH="/api/infra/log_analysis/results/log_entry_category_datasets";const getLogEntryCategoryDatasetsRequestPayloadRT=lib["type"]({data:lib["type"]({sourceId:lib["string"],timeRange:shared["e"]})});const getLogEntryCategoryDatasetsSuccessReponsePayloadRT=lib["intersection"]([lib["type"]({data:lib["type"]({datasets:lib["array"](lib["string"])})}),lib["partial"]({timing:shared["d"]})]);const getLogEntryCategoryDatasetsResponsePayloadRT=lib["union"]([getLogEntryCategoryDatasetsSuccessReponsePayloadRT,shared["a"],shared["c"]]);const LOG_ANALYSIS_GET_LATEST_LOG_ENTRY_CATEGORY_DATASETS_STATS_PATH="/api/infra/log_analysis/results/latest_log_entry_category_datasets_stats";const categorizerStatusRT=lib["keyof"]({ok:null,warn:null});const getLatestLogEntryCategoryDatasetsStatsRequestPayloadRT=lib["type"]({data:lib["type"]({jobIds:lib["array"](lib["string"]),timeRange:shared["e"],includeCategorizerStatuses:lib["array"](categorizerStatusRT)})});const logEntryCategoriesDatasetStatsRT=lib["type"]({categorization_status:categorizerStatusRT,categorized_doc_count:lib["number"],dataset:lib["string"],dead_category_count:lib["number"],failed_category_count:lib["number"],frequent_category_count:lib["number"],job_id:lib["string"],log_time:lib["number"],rare_category_count:lib["number"],total_category_count:lib["number"]});const getLatestLogEntryCategoryDatasetsStatsSuccessResponsePayloadRT=lib["intersection"]([lib["type"]({data:lib["type"]({datasetStats:lib["array"](logEntryCategoriesDatasetStatsRT)})}),lib["partial"]({timing:shared["d"]})]);var log_entries=__webpack_require__(204);const LOG_ANALYSIS_GET_LOG_ENTRY_CATEGORY_EXAMPLES_PATH="/api/infra/log_analysis/results/log_entry_category_examples";const getLogEntryCategoryExamplesRequestPayloadRT=lib["type"]({data:lib["type"]({categoryId:lib["number"],exampleCount:lib["number"],sourceId:lib["string"],timeRange:shared["e"]})});const logEntryCategoryExampleRT=lib["type"]({id:lib["string"],dataset:lib["string"],message:lib["string"],timestamp:lib["number"],tiebreaker:lib["number"],context:log_entries["p"]});const getLogEntryCategoryExamplesSuccessReponsePayloadRT=lib["intersection"]([lib["type"]({data:lib["type"]({examples:lib["array"](logEntryCategoryExampleRT)})}),lib["partial"]({timing:shared["d"]})]);const getLogEntryCategoryExamplesResponsePayloadRT=lib["union"]([getLogEntryCategoryExamplesSuccessReponsePayloadRT,shared["a"],shared["c"]]);const LOG_ANALYSIS_GET_LOG_ENTRY_RATE_PATH="/api/infra/log_analysis/results/log_entry_rate";const getLogEntryRateRequestPayloadRT=lib["type"]({data:lib["intersection"]([lib["type"]({bucketDuration:lib["number"],sourceId:lib["string"],timeRange:shared["e"]}),lib["partial"]({datasets:lib["array"](lib["string"])})])});const logEntryRateAnomalyRT=lib["type"]({id:lib["string"],actualLogEntryRate:lib["number"],anomalyScore:lib["number"],duration:lib["number"],startTime:lib["number"],typicalLogEntryRate:lib["number"]});const logEntryRatePartitionRT=lib["type"]({analysisBucketCount:lib["number"],anomalies:lib["array"](logEntryRateAnomalyRT),averageActualLogEntryRate:lib["number"],maximumAnomalyScore:lib["number"],numberOfLogEntries:lib["number"],partitionId:lib["string"]});const logEntryRateHistogramBucketRT=lib["type"]({partitions:lib["array"](logEntryRatePartitionRT),startTime:lib["number"]});const getLogEntryRateSuccessReponsePayloadRT=lib["type"]({data:lib["type"]({bucketDuration:lib["number"],histogramBuckets:lib["array"](logEntryRateHistogramBucketRT),totalNumberOfLogEntries:lib["number"]})});const getLogEntryRateResponsePayloadRT=lib["union"]([getLogEntryRateSuccessReponsePayloadRT,shared["a"],shared["b"],shared["c"]]);const LOG_ANALYSIS_GET_LOG_ENTRY_RATE_EXAMPLES_PATH="/api/infra/log_analysis/results/log_entry_examples";const getLogEntryExamplesRequestPayloadRT=lib["type"]({data:lib["intersection"]([lib["type"]({dataset:lib["string"],exampleCount:lib["number"],sourceId:lib["string"],timeRange:shared["e"]}),lib["partial"]({categoryId:lib["string"]})])});const logEntryExampleRT=lib["type"]({id:lib["string"],dataset:lib["string"],message:lib["string"],timestamp:lib["number"],tiebreaker:lib["number"]});const getLogEntryExamplesSuccessReponsePayloadRT=lib["intersection"]([lib["type"]({data:lib["type"]({examples:lib["array"](logEntryExampleRT)})}),lib["partial"]({timing:shared["d"]})]);const getLogEntryExamplesResponsePayloadRT=lib["union"]([getLogEntryExamplesSuccessReponsePayloadRT,shared["a"],shared["c"]]);const LOG_ANALYSIS_GET_LOG_ENTRY_ANOMALIES_PATH="/api/infra/log_analysis/results/log_entry_anomalies";const paginationCursorRT=lib["tuple"]([lib["union"]([lib["string"],lib["number"]]),lib["union"]([lib["string"],lib["number"]])]);const anomalyTypeRT=lib["keyof"]({logRate:null,logCategory:null});const logEntryAnomalyCommonFieldsRT=lib["type"]({id:lib["string"],anomalyScore:lib["number"],dataset:lib["string"],typical:lib["number"],actual:lib["number"],type:anomalyTypeRT,duration:lib["number"],startTime:lib["number"],jobId:lib["string"]});const logEntrylogRateAnomalyRT=logEntryAnomalyCommonFieldsRT;const logEntrylogCategoryAnomalyRT=lib["partial"]({categoryId:lib["string"]});const logEntryAnomalyRT=lib["intersection"]([logEntryAnomalyCommonFieldsRT,logEntrylogRateAnomalyRT,logEntrylogCategoryAnomalyRT]);const getLogEntryAnomaliesSuccessReponsePayloadRT=lib["intersection"]([lib["type"]({data:lib["intersection"]([lib["type"]({anomalies:lib["array"](logEntryAnomalyRT),hasMoreEntries:lib["boolean"]}),lib["partial"]({paginationCursors:lib["type"]({previousPageCursor:paginationCursorRT,nextPageCursor:paginationCursorRT})})])}),lib["partial"]({timing:shared["d"]})]);const sortOptionsRT=lib["keyof"]({anomalyScore:null,dataset:null,startTime:null});const sortDirectionsRT=lib["keyof"]({asc:null,desc:null});const paginationPreviousPageCursorRT=lib["type"]({searchBefore:paginationCursorRT});const paginationNextPageCursorRT=lib["type"]({searchAfter:paginationCursorRT});const paginationRT=lib["intersection"]([lib["type"]({pageSize:lib["number"]}),lib["partial"]({cursor:lib["union"]([paginationPreviousPageCursorRT,paginationNextPageCursorRT])})]);const sortRT=lib["type"]({field:sortOptionsRT,direction:sortDirectionsRT});const getLogEntryAnomaliesRequestPayloadRT=lib["type"]({data:lib["intersection"]([lib["type"]({sourceId:lib["string"],timeRange:shared["e"]}),lib["partial"]({pagination:paginationRT,sort:sortRT,datasets:lib["array"](lib["string"])})])});const LOG_ANALYSIS_GET_LOG_ENTRY_ANOMALIES_DATASETS_PATH="/api/infra/log_analysis/results/log_entry_anomalies_datasets";const getLogEntryAnomaliesDatasetsRequestPayloadRT=lib["type"]({data:lib["type"]({sourceId:lib["string"],timeRange:shared["e"]})});const getLogEntryAnomaliesDatasetsSuccessReponsePayloadRT=lib["intersection"]([lib["type"]({data:lib["type"]({datasets:lib["array"](lib["string"])})}),lib["partial"]({timing:shared["d"]})]);const getLogEntryAnomaliesDatasetsResponsePayloadRT=lib["union"]([getLogEntryAnomaliesDatasetsSuccessReponsePayloadRT,shared["a"],shared["c"]]);const LOG_ANALYSIS_VALIDATE_DATASETS_PATH="/api/infra/log_analysis/validation/log_entry_datasets";const validateLogEntryDatasetsRequestPayloadRT=lib["type"]({data:lib["type"]({indices:lib["array"](lib["string"]),timestampField:lib["string"],startTime:lib["number"],endTime:lib["number"]})});const logEntryDatasetsEntryRT=lib["strict"]({indexName:lib["string"],datasets:lib["array"](lib["string"])});const validateLogEntryDatasetsResponsePayloadRT=lib["type"]({data:lib["type"]({datasets:lib["array"](logEntryDatasetsEntryRT)})});const LOG_ANALYSIS_VALIDATE_INDICES_PATH="/api/infra/log_analysis/validation/log_entry_rate_indices";const validationIndicesFieldSpecificationRT=lib["type"]({name:lib["string"],validTypes:lib["array"](lib["string"])});const validationIndicesRequestPayloadRT=lib["type"]({data:lib["type"]({fields:lib["array"](validationIndicesFieldSpecificationRT),indices:lib["array"](lib["string"])})});const validationIndicesErrorRT=lib["union"]([lib["type"]({error:lib["literal"]("INDEX_NOT_FOUND"),index:lib["string"]}),lib["type"]({error:lib["literal"]("FIELD_NOT_FOUND"),index:lib["string"],field:lib["string"]}),lib["type"]({error:lib["literal"]("FIELD_NOT_VALID"),index:lib["string"],field:lib["string"]})]);const validationIndicesResponsePayloadRT=lib["type"]({data:lib["type"]({errors:lib["array"](validationIndicesErrorRT)})})}}]);